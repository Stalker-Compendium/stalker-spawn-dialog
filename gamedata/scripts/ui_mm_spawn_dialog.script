-- File:        ui_mm_spawn_dialog.script
-- Description: Spawn Dialog for STALKER CoP with Misery 2.0
-- Created:     2013/08/03
-- Last edit:	2013/08/03
-- Author:      Rowan Lewis [Measly Twerp] (rl@nbsp.io)
-- Version:     1.0

local knives = {
	"wpn_knife",
	"wpn_knife_inv_2",
	"wpn_knife_inv_3",
	"wpn_knife_inv_4",
	"wpn_knife_inv_5",
	"wpn_knife_m",
--	"wpn_knife_inv",					-- A duplicate of `wpn_knife`.
}

local pistols = {
	"wpn_beretta",
	"wpn_beretta_alt",
	"wpn_beretta_camo",
	"wpn_beretta_custom",
	"wpn_beretta_worn",
	"wpn_colt1911",
	"wpn_colt1911_alt1",
	"wpn_colt1911_alt2",
	"wpn_colt1911_camo",
	"wpn_colt1911_worn",
	"wpn_desert_eagle",
	"wpn_desert_eagle_alt",
	"wpn_desert_eagle_camo",
	"wpn_desert_eagle_custom",
	"wpn_desert_eagle_nimble",
	"wpn_desert_eagle_worn",
	"wpn_fort",
	"wpn_fort_camo",
	"wpn_fort_custom",
	"wpn_fort_rusty",
	"wpn_fort_worn",
	"wpn_gp100",
	"wpn_gsh18",
	"wpn_hpsa",
	"wpn_hpsa_alt",
	"wpn_hpsa_camo",
	"wpn_hpsa_custom",
	"wpn_hpsa_worn",
	"wpn_oc33",
	"wpn_pb",
	"wpn_pm",
	"wpn_pm_actor",
	"wpn_pm_alt",
	"wpn_pm_custom",
	"wpn_pm_worn",
	"wpn_sig220",
	"wpn_sig220_camo",
	"wpn_sig220_custom",
	"wpn_sig220_nimble",
	"wpn_sig220_rusty",
	"wpn_sig220_worn",
	"wpn_tt33",
	"wpn_usp",
	"wpn_usp_alt1",
	"wpn_usp_alt2",
	"wpn_usp_custom",
	"wpn_usp_worn",
	"wpn_walther",
	"wpn_walther_alt1",
	"wpn_walther_alt2",
	"wpn_walther_custom",
	"wpn_walther_worn",
}

local shotguns = {
	"wpn_bm16",
	"wpn_bm16_full",
	"wpn_bm16_gold",
	"wpn_bm16_rusty",
	"wpn_bm16_silver",
	"wpn_bm16_worn",
	"wpn_mossberg",
	"wpn_obrez",
	"wpn_protecta",
	"wpn_protecta_camo",
	"wpn_protecta_custom",
	"wpn_protecta_nimble",
	"wpn_protecta_worn",
	"wpn_saiga",
	"wpn_spas12",
	"wpn_spas12_alt",
	"wpn_spas12_custom",
	"wpn_spas12_nimble",
	"wpn_spas12_worn",
	"wpn_toz34",
	"wpn_toz34_alt",
	"wpn_toz34_decor",
	"wpn_toz34_new",
	"wpn_toz34_worn",
	"wpn_wincheaster1300",
	"wpn_wincheaster1300_alt",
	"wpn_wincheaster1300_camo",
	"wpn_wincheaster1300_rusty",
	"wpn_wincheaster1300_trapper",
	"wpn_wincheaster1300_worn",
}

local assault_rifles = {
	"wpn_abakan",
	"wpn_abakan_alt",
	"wpn_abakan_camo",
	"wpn_abakan_custom",
	"wpn_abakan_rusty",
	"wpn_abakan_worn",
	"wpn_aek973",
	"wpn_ak105",
	"wpn_ak47m",
	"wpn_ak47m_alt",
	"wpn_ak47m_camo",
	"wpn_ak47m_custom",
	"wpn_ak47m_modern",
	"wpn_ak47m_worn",
	"wpn_ak74",
	"wpn_ak74_alt",
	"wpn_ak74_camo",
	"wpn_ak74_custom1",
	"wpn_ak74_custom2",
	"wpn_ak74_rusty",
	"wpn_ak74_worn",
	"wpn_ak74u",
	"wpn_ak74u_camo",
	"wpn_ak74u_custom",
	"wpn_ak74u_rusty",
	"wpn_ak74u_snag",
	"wpn_ak74u_worn",
	"wpn_aks74_cobra",
	"wpn_aps",
	"wpn_famas3",
	"wpn_far15",
	"wpn_fn2000",
	"wpn_fn2000_alt1",
	"wpn_fn2000_alt2",
	"wpn_fn2000_alt3",
	"wpn_fn2000_custom",
	"wpn_fn2000_nimble",
	"wpn_fn2000_worn",
	"wpn_fnfal",
	"wpn_fnfallelcan",
	"wpn_fr2000",
	"wpn_g36",
	"wpn_g36_custom",
	"wpn_g36_nimble",
	"wpn_g43",
	"wpn_galil",
	"wpn_groza",
	"wpn_groza_nimble",
	"wpn_k98",
	"wpn_l85",
	"wpn_l85_camo",
	"wpn_l85_custom",
	"wpn_l85_worn",
	"wpn_lr300",
	"wpn_lr300_alt",
	"wpn_lr300_camo",
	"wpn_lr300_custom",
	"wpn_lr300_worn",
	"wpn_m16a1",
	"wpn_m1891",
	"wpn_m4a1",
	"wpn_mp5",
	"wpn_mp5_alt",
	"wpn_mp5_custom",
	"wpn_mp5_nimble",
	"wpn_mp5_worn",
	"wpn_ppsh41",
	"wpn_ppsh41_rednew",
	"wpn_ppsh41_redworn",
	"wpn_ppsh41_woodnew",
	"wpn_ppsh41_woodworn",
	"wpn_rpk74",
--	"wpn_sako",						-- Does not appear to be complete.
	"wpn_scorpion",
	"wpn_sig550",
	"wpn_sig550_alt",
	"wpn_sig550_custom",
	"wpn_sig550_luckygun",
	"wpn_sig550_sniper",
	"wpn_sig550_worn",
	"wpn_sig552",
	"wpn_sks",
	"wpn_stg44",
	"wpn_stg44_alt",
	"wpn_stg44_new",
	"wpn_stg44_old",
	"wpn_stg44_worn",
	"wpn_ump45",
	"wpn_val",
	"wpn_vsk94",
	"wpn_xm8",
--	"wpn_aug",						-- Disabled because it causes a crash.
}

local sniper_rifles = {
	"pri_a17_gauss_rifle",
	"wpn_gauss",
	"wpn_m21",
	"wpn_m24",
	"wpn_sig550_sniper",
	"wpn_svd",
	"wpn_svd_nimble",
	"wpn_svu",
	"wpn_svu_nimble",
	"wpn_trg",
	"wpn_vintorez",
	"wpn_vintorez_ap",
	"wpn_vintorez_nimble",
--	"wpn_ksvk",							-- Disabled because it causes a crash.
}

local heavy_weapons = {
	"wpn_pkm",
	"wpn_pkm_zulus",
	"wpn_rg-6",
	"wpn_rpg7",
}

local explosives = {
	"explo_balon_gas",
	"explo_jerrycan_fuel",
	"explo_metalcan_powder",
	"grenade_f1",
	"grenade_gd-05",
	"grenade_rgd5",
	"ied",
	"ied_blow",
	"ied_rpg",
	"mine",
--	"mine_blow",						-- Doesn't actually do anything.
--	"rpg_blow",							-- Doesn't actually do anything.
}

local ammunition = {
	"ammo_11.43x23_ap",
	"ammo_11.43x23_fmj",
	"ammo_11.43x23_hydro",
	"ammo_12x70_buck",
	"ammo_12x76_zhekan",
	"ammo_12x76_zhekan_heli",
	"ammo_357_hp_mag",
	"ammo_357_hp_mag_ap",
	"ammo_5.45x39_ap",
	"ammo_5.45x39_fmj",
	"ammo_5.56x45_ap",
	"ammo_5.56x45_ss190",
	"ammo_7.62x39_ap",
	"ammo_7.62x39_fmj",
	"ammo_7.62x51_ap",
	"ammo_7.62x51_fmj",
	"ammo_7.62x54_7h1",
	"ammo_7.62x54_7h14",
	"ammo_7.62x54_ap",
	"ammo_7.92x33_ap",
	"ammo_7.92x33_fmj",
	"ammo_9x18_ap",
	"ammo_9x18_fmj",
	"ammo_9x18_pmm",
	"ammo_9x19_ap",
	"ammo_9x19_fmj",
	"ammo_9x19_pbp",
	"ammo_9x39_ap",
	"ammo_9x39_pab9",
	"ammo_gauss",
	"ammo_gauss_cardan",
	"ammo_m209",
	"ammo_magnum_300",
	"ammo_magnum_300_ap",
	"ammo_pkm_100",
	"ammo_vog-25",
}

local attachments = {
	"wpn_addon_grenade_launcher",
	"wpn_addon_grenade_launcher_m203",
	"wpn_addon_scope",
	"wpn_addon_scope_acog",
	"wpn_addon_scope_acog_night",
	"wpn_addon_scope_acog_trijicon",
	"wpn_addon_scope_detector",
	"wpn_addon_scope_m24",
	"wpn_addon_scope_moist",
	"wpn_addon_scope_night",
	"wpn_addon_scope_susat",
	"wpn_addon_scope_susat_custom",
	"wpn_addon_scope_susat_dusk",
	"wpn_addon_scope_susat_moist",
	"wpn_addon_scope_susat_night",
	"wpn_addon_scope_susat_worn",
	"wpn_addon_scope_susat_x1.6",
	"wpn_addon_scope_vsk",
	"wpn_addon_scope_worn",
	"wpn_addon_scope_ww2",
	"wpn_addon_scope_ww2_moist",
	"wpn_addon_scope_ww2_worn",
	"wpn_addon_scope_x2.7",
	"wpn_addon_scope_zf4",
	"wpn_addon_scope_zf4_moist",
	"wpn_addon_scope_zf4_worn",
	"wpn_addon_silencer",
	"wpn_addon_silencer_1143x23",
	"wpn_addon_silencer_545x39",
	"wpn_addon_silencer_556x45",
	"wpn_addon_silencer_762x39",
	"wpn_addon_silencer_762x51",
	"wpn_addon_silencer_762x54",
	"wpn_addon_silencer_9x18",
	"wpn_addon_silencer_9x19",
	"wpn_addon_silencer_9x39",
--	"wpn_addon_scope_pu9130",			-- Disabled as it is marked TODO.
--	"wpn_addon_scope_zf9",				-- Disabled as it is marked TODO.
}

local outfits = {
	"cs_heavy_outfit",
	"dolg_heavy_outfit",
	"dolg_outfit",
	"ecologist_green_outfit",
	"exo_outfit",
	"helm_battle",
	"helm_hardhat",
	"helm_hardhat_snag",
	"helm_protective",
	"helm_respirator",
	"helm_respirator_heavy",
	"helm_respirator_joker",
	"helm_tactic",
	"military_outfit",
	"novice_outfit",
	"scientific_outfit",
	"specops_outfit",
	"stalker_outfit",
	"stalker_outfit_barge",
	"svoboda_heavy_outfit",
	"svoboda_light_outfit",
--	"ecologist_suit_red_suit",			-- Disabled because it causes a crash.
--	"helmet",							-- Shows up as 'st_helmet' worthless?
}

local equipment = {
	"af_aac",
	"af_aam",
	"af_camelbak",
	"af_cooler",
	"af_frames",
	"af_freon",
	"af_grid",
	"af_iam",
	"af_kevlar",
	"af_plates",
	"af_surge",
	"ammo_bad",
	"army_patch",
	"bandit_patch",
	"batteries",
	"batteries_ccell",
	"batteries_dead",
	"batteries_empty",
	"beadspread",
	"book1",
	"book2",
	"book3",
	"boots",
	"cards",
	"cooking",
	"crowbar",
	"csky_patch",
	"cutlery",
	"detector_advanced",
	"detector_elite",
	"detector_scientific",
	"detector_simple",
	"device_flashlight",
	"device_torch",
	"dolg_patch",
	"drugs_kit",
	"fieldcooker",
	"freedom_patch",
	"geiger_dead",
	"grooming",
	"guitar_a",
	"hammer_inv",
	"harmonica_a",
	"headlamp",
	"itm_backpack",
	"jar",
	"jewelry_box",
	"journal",
	"kit_hunt",
	"maps_kit",
	"meinkampf",
	"merc_patch",
	"mili_maps",
	"mirror",
	"monolith_patch",
	"picture_woman",
	"porn",
	"porn2",
	"radio",
	"radio2",
	"renegade_patch",
	"repair_kit",
	"rope",
	"roubles",
	"shovel_mili",
	"shovel_old",
	"sleep_bag",
	"spareparts",
	"stalker_patch",
	"survivalguide",
	"swiss",
	"synthrope",
	"tarpaulin",
	"test_flashlight",
	"underwear",
	"walkie",
	"welding_goggles",
	"wpn_binoc",
	"wpn_upd",
--	"compression_bag",					-- Inflatable bed! Neat, but useless.
--	"device_identity_card",				-- A waste of space, and useless.
--	"device_torch_dummy",				-- A duplicate of `device_torch`.
--	"flashlight_broken",				-- A duplicate of `device_flashlight`.
--	"flashlight_old",					-- A duplicate of `device_flashlight`.
--	"identity_card_assaulter",			-- A waste of space, and useless.
--	"identity_card_recon",				-- A waste of space, and useless.
--	"identity_card_sniper",				-- A waste of space, and useless.
--	"wpn_binoc_inv",					-- A duplicate of `wpn_binoc`.
}

local artefacts = {
	"af_baloon",
	"af_blood",
	"af_compass",
	"af_cristall",
	"af_cristall_flower",
	"af_dummy_battery",
	"af_dummy_dummy",
	"af_dummy_glassbeads",
	"af_electra_flash",
	"af_electra_moonlight",
	"af_electra_sparkler",
	"af_eye",
	"af_fire",
	"af_fireball",
	"af_fuzz_kolobok",
	"af_glass",
	"af_gold_fish",
	"af_gravi",
	"af_ice",
	"af_medusa",
	"af_mincer_meat",
	"af_night_star",
	"af_oasis_heart",
	"af_quest_b14_twisted",
	"af_soul",
	"af_vyvert",
	"jup_b1_half_artifact",
}

local disposables = {
	"adrenalin",
	"akvatab",
	"antirad",
	"bandage",
	"beans",
	"beer",
	"bottle_metal",
	"bread",
	"breadold",
	"caffeine",
	"chili",
	"chocolate",
	"cigar",
	"cigar1",
	"cigar2",
	"cigar3",
	"cigarettes",
	"cigarettes_lucky",
	"cigarettes_russian",
	"cocaine",
	"conserva",
	"corn",
	"drug_anabiotic",
	"drug_antidot",
	"drug_booster",
	"drug_coagulant",
	"drug_psy_blockade",
	"drug_radioprotector",
	"drug_sleepingpills",
	"energy_drink",
	"flask",
	"glucose",
	"glucose_s",
	"hand_rolling_tobacco",
	"joint",
	"kolbasa",
	"marijuana",
	"meat_bloodsucker",
	"meat_boar",
	"meat_chimera",
	"meat_dog",
	"meat_flesh",
	"meat_pseudodog",
	"meat_snork",
	"meat_tushkano",
	"medkit",
	"medkit_army",
	"medkit_scientic",
	"mineral_water",
	"mint",
	"morphine",
	"mre",
	"mre2",
	"mre3",
	"nuts",
	"protein",
	"raisins",
	"ration_ru",
	"ration_ru2",
	"ration_ru3",
	"ration_ru4",
	"ration_ru5",
	"ration_ru6",
	"ration_ru7",
	"ration_ukr",
	"ration_ukr2",
	"ration_ukr3",
	"ration_ukr4",
	"ration_ukr5",
	"ration_ukr6",
	"rebirth",
	"salicidic_acid",
	"salmon",
	"sausage",
	"stimpack",
	"stimpack_army",
	"stimpack_scientic",
	"survival_kit",
	"tea",
	"tetanus",
	"tomato",
	"tushonka",
	"vodka",
	"vodka2",
	"vodka_quality",
	"water_drink",
--	"drink_crow",						-- Appears to be incomplete.
--	"medkit_script",					-- A duplicate of `medkit`.
}

local quest_items = {
	"device_flash_snag",
	"device_pda_port_bandit_leader",
	"device_pda_zat_b5_dealer",
	"jup_a9_conservation_info",
	"jup_a9_delivery_info",
	"jup_a9_evacuation_info",
	"jup_a9_losses_info",
	"jup_a9_meeting_info",
	"jup_a9_power_info",
	"jup_a9_way_info",
	"jup_b10_notes_01",
	"jup_b10_notes_02",
	"jup_b10_notes_03",
	"jup_b10_ufo_memory",
	"jup_b10_ufo_memory_2",
	"jup_b200_tech_materials_acetone",
	"jup_b200_tech_materials_capacitor",
	"jup_b200_tech_materials_textolite",
	"jup_b200_tech_materials_transistor",
	"jup_b200_tech_materials_wire",
	"jup_b202_bandit_pda",
	"jup_b205_sokolov_note",
	"jup_b206_plant",
	"jup_b207_merc_pda_with_contract",
	"jup_b209_monster_scanner",
	"jup_b32_scanner_device",
	"jup_b46_duty_founder_pda",
	"jup_b47_jupiter_products_info",
	"jup_b47_merc_pda",
	"jup_b9_blackbox",
	"lx8_service_instruction",
	"pri_a19_american_experiment_info",
	"pri_a19_lab_x10_info",
	"pri_a19_lab_x16_info",
	"pri_a19_lab_x18_info",
	"pri_a19_lab_x7_info",
	"pri_a25_explosive_charge_item",
	"pri_b306_envoy_pda",
	"pri_b35_lab_x8_key",
	"pri_b36_monolith_hiding_place_pda",
	"toolkit_1",
	"toolkit_2",
	"toolkit_3",
	"zat_a23_access_card",
	"zat_a23_gauss_rifle_docs",
	"zat_a23_labx8_key",
	"zat_b12_documents_1",
	"zat_b12_documents_2",
	"zat_b12_key_1",
	"zat_b12_key_2",
	"zat_b20_noah_pda",
	"zat_b22_medic_pda",
	"zat_b33_safe_container",
	"zat_b39_joker_pda",
	"zat_b40_notebook",
	"zat_b40_pda_1",
	"zat_b40_pda_2",
	"zat_b44_barge_pda",
	"zat_b57_gas",
}

class "list_item" (CUIListBoxItem)

function list_item:__init(height) super(height)
	self:SetTextColor(GetARGB(255, 216, 186, 140))

	self.name = self:GetTextItem()
	self.name:SetWndRect(Frect():set(0, 0, 300, 22))
	self.name:SetFont(GetFontLetterica18Russian())
	self.name:SetWndSize(vector2():set(400, height))
	self.name:SetEllipsis(true)
end

class "dialog" (CUIScriptWnd)

function dialog:__init() super()
	self:InitControls()
	self:InitCallBacks()
	self:InitData()
end

function dialog:__finalize()
end

function dialog:InitControls(x, y, xml, handler)
	self:SetWndRect(Frect():set(0, 0, 1024, 768))

	local xml = CScriptXmlInit()
	local ctrl = CUIWindow()

	xml:ParseFile("ui_mm_spawn_dialog.xml")
	xml:InitStatic("background", self)

	self.form = xml:InitStatic("form", self)

	xml:InitStatic("form:caption", self.form)

	-- Weapons ----------------------------------------------

	-- Knives [weapon_class: none]
	ctrl = xml:Init3tButton("form:btn_knives", self)
	self:Register(ctrl, "btn_knives")

	-- Pistols [weapon_class: none]
	ctrl = xml:Init3tButton("form:btn_pistols", self)
	self:Register(ctrl, "btn_pistols")

	-- Shotguns [weapon_class: shotgun]
	ctrl = xml:Init3tButton("form:btn_shotguns", self)
	self:Register(ctrl, "btn_shotguns")

	-- Assult Rifles [weapon_class: assault_rifle]
	ctrl = xml:Init3tButton("form:btn_assult_rifles", self)
	self:Register(ctrl, "btn_assult_rifles")

	-- Sniper Rifles [weapon_class: sniper_rifle]
	ctrl = xml:Init3tButton("form:btn_sniper_rifles", self)
	self:Register(ctrl, "btn_sniper_rifles")

	-- Heavy Weapons [weapon_class: heavy_weapon]
	ctrl = xml:Init3tButton("form:btn_heavy_weapons", self)
	self:Register(ctrl, "btn_heavy_weapons")

	-- Ammunition
	ctrl = xml:Init3tButton("form:btn_ammunition", self)
	self:Register(ctrl, "btn_ammunition")

	-- Explosives
	ctrl = xml:Init3tButton("form:btn_explosives", self)
	self:Register(ctrl, "btn_explosives")

	-- Attachments
	ctrl = xml:Init3tButton("form:btn_attachments", self)
	self:Register(ctrl, "btn_attachments")


	-- Gear -------------------------------------------------

	-- Outfits
	ctrl = xml:Init3tButton("form:btn_outfits", self)
	self:Register(ctrl, "btn_outfits")

	-- Tools and Equipment
	ctrl = xml:Init3tButton("form:btn_equipment", self)
	self:Register(ctrl, "btn_equipment")

	-- Artefacts
	ctrl = xml:Init3tButton("form:btn_artefacts", self)
	self:Register(ctrl, "btn_artefacts")

	-- Disposables
	ctrl = xml:Init3tButton("form:btn_disposables", self)
	self:Register(ctrl, "btn_disposables")


	-- Misc -------------------------------------------------

	-- Quest Items
	ctrl = xml:Init3tButton("form:btn_quest_items", self)
	self:Register(ctrl, "btn_quest_items")

	-- All Items
	ctrl = xml:Init3tButton("form:btn_all_items", self)
	self:Register(ctrl, "btn_all_items")

	xml:InitFrame("form:list_frame", self)
	self.list = xml:InitListBox("form:list", self)


	-- Controls ---------------------------------------------

	self.list:ShowSelectedItem(true)
	self:Register(self.list, "list_window")

	ctrl = xml:Init3tButton("form:btn_apply" ,self)
	self:Register(ctrl, "btn_apply")

	ctrl = xml:Init3tButton("form:btn_cancel", self)
	self:Register(ctrl, "btn_cancel")
end

function dialog:InitCallBacks()
	-- Weapons ----------------------------------------------

	-- Knives [weapon_class: none]
	self:AddCallback(
		"btn_knives",
		ui_events.BUTTON_CLICKED,
		self.OnButtonKnivesClicked,
		self
	)

	-- Pistols [weapon_class: none]
	self:AddCallback(
		"btn_pistols",
		ui_events.BUTTON_CLICKED,
		self.OnButtonPistolsClicked,
		self
	)

	-- Shotguns [weapon_class: shotgun]
	self:AddCallback(
		"btn_shotguns",
		ui_events.BUTTON_CLICKED,
		self.OnButtonShotgunsClicked,
		self
	)

	-- Assult Rifles [weapon_class: assault_rifle]
	self:AddCallback(
		"btn_assult_rifles",
		ui_events.BUTTON_CLICKED,
		self.OnButtonAssultRiflesClicked,
		self
	)

	-- Sniper Rifles [weapon_class: sniper_rifle]
	self:AddCallback(
		"btn_sniper_rifles",
		ui_events.BUTTON_CLICKED,
		self.OnButtonSniperRiflesClicked,
		self
	)

	-- Heavy Weapons [weapon_class: heavy_weapon]
	self:AddCallback(
		"btn_heavy_weapons",
		ui_events.BUTTON_CLICKED,
		self.OnButtonHeavyWeaponsClicked,
		self
	)

	-- Ammunition
	self:AddCallback(
		"btn_ammunition",
		ui_events.BUTTON_CLICKED,
		self.OnButtonAmmunitionClicked,
		self
	)

	-- Explosives
	self:AddCallback(
		"btn_explosives",
		ui_events.BUTTON_CLICKED,
		self.OnButtonExplosivesClicked,
		self
	)

	-- Attachments
	self:AddCallback(
		"btn_attachments",
		ui_events.BUTTON_CLICKED,
		self.OnButtonAttachmentsClicked,
		self
	)


	-- Gear -------------------------------------------------

	-- Outfits
	self:AddCallback(
		"btn_outfits",
		ui_events.BUTTON_CLICKED,
		self.OnButtonOutfitsClicked,
		self
	)

	-- Tools and Equipment
	self:AddCallback(
		"btn_equipment",
		ui_events.BUTTON_CLICKED,
		self.OnButtonEquipmentClicked,
		self
	)

	-- Artefacts
	self:AddCallback(
		"btn_artefacts",
		ui_events.BUTTON_CLICKED,
		self.OnButtonArtefactsClicked,
		self
	)

	-- Disposables
	self:AddCallback(
		"btn_disposables",
		ui_events.BUTTON_CLICKED,
		self.OnButtonDisposablesClicked,
		self
	)


	-- Misc -------------------------------------------------

	-- Quest Items
	self:AddCallback(
		"btn_quest_items",
		ui_events.BUTTON_CLICKED,
		self.OnButtonQuestItemsClicked,
		self
	)

	-- All Items
	self:AddCallback(
		"btn_all_items",
		ui_events.BUTTON_CLICKED,
		self.OnButtonAllItemsClicked,
		self
	)


	-- Controls ---------------------------------------------

	self:AddCallback(
		"list_window",
		ui_events.WINDOW_LBUTTON_DB_CLICK,
		self.OnButtonApplyClicked,
		self
	)

    self:AddCallback(
    	"btn_apply",
    	ui_events.BUTTON_CLICKED,
    	self.OnButtonApplyClicked,
    	self
    )
	self:AddCallback(
		"btn_cancel",
		ui_events.BUTTON_CLICKED,
		self.OnButtonCancelClicked,
		self
	)
end

function dialog:InitData()
	self.data = {}

	self:AppendData(knives, "knives")
	self:AppendData(pistols, "pistols")
	self:AppendData(shotguns, "shotguns")
	self:AppendData(assault_rifles, "assault_rifles")
	self:AppendData(sniper_rifles, "sniper_rifles")
	self:AppendData(heavy_weapons, "heavy_weapons")
	self:AppendData(ammunition, "ammunition")
	self:AppendData(explosives, "explosives")
	self:AppendData(attachments, "attachments")
	self:AppendData(outfits, "outfits")
	self:AppendData(equipment, "equipment")
	self:AppendData(artefacts, "artefacts")
	self:AppendData(disposables, "disposables")
	self:AppendData(quest_items, "quest_items")

	table.sort(self.data, function(a, b) return a.sortable < b.sortable end)

	self:FillList()
end

function dialog:AppendData(data, type)
	for key, value in ipairs(data) do
		local item = {}

		item.id = value
		item.name = game.translate_string(
			system_ini():r_string(value, 'inv_name')
		)
		item.name = item.name or item.id
		item.sortable = item.name:lower():gsub('%W+', ' '):gsub('^ +', ''):gsub(' +$', '')
		item.type = type

		table.insert(self.data, item)
	end
end

function dialog:FillList(type)
	self.list:Clear()

	for i = 1, #self.data do
		if (type == nil) or (type == self.data[i].type) then
			local item = list_item(18)

			item.name:SetText(self.data[i].name)
			item.id = self.data[i].id
			self.list:AddExistingItem(item)
		end
	end
end

function dialog:OnButtonKnivesClicked()
	self:FillList('knives')
end

function dialog:OnButtonPistolsClicked()
	self:FillList('pistols')
end

function dialog:OnButtonShotgunsClicked()
	self:FillList('shotguns')
end

function dialog:OnButtonAssultRiflesClicked()
	self:FillList('assault_rifles')
end

function dialog:OnButtonSniperRiflesClicked()
	self:FillList('sniper_rifles')
end

function dialog:OnButtonHeavyWeaponsClicked()
	self:FillList('heavy_weapons')
end

function dialog:OnButtonAmmunitionClicked()
	self:FillList('ammunition')
end

function dialog:OnButtonExplosivesClicked()
	self:FillList('explosives')
end

function dialog:OnButtonAttachmentsClicked()
	self:FillList('attachments')
end

function dialog:OnButtonOutfitsClicked()
	self:FillList('outfits')
end

function dialog:OnButtonEquipmentClicked()
	self:FillList('equipment')
end

function dialog:OnButtonArtefactsClicked()
	self:FillList('artefacts')
end

function dialog:OnButtonDisposablesClicked()
	self:FillList('disposables')
end

function dialog:OnButtonQuestItemsClicked()
	self:FillList('quest_items')
end

function dialog:OnButtonAllItemsClicked()
	self:FillList()
end

function dialog:OnButtonApplyClicked()
	if self.list:GetSize() == 0 then
		return
	end

	local item = self.list:GetSelectedItem()

	if not(item) then
		return
	end

	local actor = db.actor:id()

	alife():create(item.id, db.actor:position(), 0, 0, actor)
end

function dialog:OnButtonCancelClicked()
	self.owner:ShowDialog(true)
	self:HideDialog()
	self.owner:Show(true)
end

function dialog:OnKeyboard(dik, keyboard_action)
	local bind = dik_to_bind(dik)

	if bind == key_bindings.kQUIT then
		self:OnButtonCancelClicked()

	elseif dik == 28 then
		self:OnButtonApplyClicked()
	end

	return true
end